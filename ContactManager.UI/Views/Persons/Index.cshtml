@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}
@* ctrl + k, ctrl + d => shortcut for proper formatting the document
    ctrl + k, ctrl + f => shortcut for selective formatting code.
*@

@functions {
    async Task RenderGridColumnHeader(string columnName, string displayName)
    {
        @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
        {
            {"ColumnName", columnName},
            {"DisplayName", displayName}
        })
    }
}

<form asp-controller="Persons" asp-action="Index" method="get">
    <!-- BreadCrumb Starts-->
    <div class="flex">
        <div class="flex-1">
            <div class="text-grey">
                <span>Contacts</span>
                <i class="fa-solid fa-caret-right"></i>
                <span class="text-grey">Persons</span>
            </div>
        </div>

        <div class="flex-1 text-right">
            <a asp-controller="Persons" asp-action="Create" class="button-link button-blue-back">Create Person</a>
            <a asp-controller="Persons" asp-action="PersonsPDF" class="button-link button-blue-back ml">Download as PDF</a>
            <a asp-controller="Persons" asp-action="PersonsCSV" class="button-link button-blue-back ml">Download as CSV</a>
            <a asp-controller="Persons" asp-action="PersonsExcel" class="button-link button-blue-back ml">Download as Excel</a>
        </div>
    </div>
    <!-- BreadCrumb Ends-->

    <div class="table-container">
        <div class="flex">
            <div class="flex-1"> <h1>Persons</h1></div>
            <div class="flex-3 text-right">
                <label>Search By:</label>

                <select class="search-dropdown" name="searchBy" style="width:200px;">
                    @foreach (var field in ViewBag.SearchFields)
                    {
                        if (field.Key == ViewBag.CurrentSearchBy)
                        {
                            <option value="@field.Key" selected="selected">@field.Value</option>
                        }
                        else
                        {
                            <option value="@field.Key">@field.Value</option>
                        }
                        @* Eg: searchBy=PersonName&searchString=abc (Query string)
                    With Form, along with GET request we send the data to the controller in form-urlencoded format
                    which can be received in controller through model binding.
                    So, we'll specify searchBy and searchString (properties from name property in option & input tags) in controller.
                    *@
                    }
                </select>

                <input type="search" id="Search" class="search-text" placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" style="width:200px;" />

                <button class="search-button">Search</button>
                <a asp-controller="Persons" asp-action="Index" class="ml link-hover">Clear all</a>
            </div>
        </div>

        <table class="table w-100 mt persons">
            <thead>
                <tr style="width:auto;">
                    @{
                        await RenderGridColumnHeader(nameof(PersonResponse.PersonName), "Name");
                        await RenderGridColumnHeader(nameof(PersonResponse.Email), "Email");
                        await RenderGridColumnHeader(nameof(PersonResponse.DateOfBirth), "DOB");
                        await RenderGridColumnHeader(nameof(PersonResponse.Age), "Age");
                        await RenderGridColumnHeader(nameof(PersonResponse.Gender), "Gender");
                        await RenderGridColumnHeader(nameof(PersonResponse.Country), "Country");
                        await RenderGridColumnHeader(nameof(PersonResponse.Address), "Address");
                        await RenderGridColumnHeader(nameof(PersonResponse.ReceiveNewsLetters), "Receive Newsletters");
                    }
                    <th>Options</th>
                </tr>
            </thead>

            <tbody>
                @foreach (PersonResponse person in Model)
                {
                    <tr>
                        <td style="width:10%">@person.PersonName</td>
                        <td style="width:18%">@person.Email</td>
                        <td style="width:27%">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                        <td style="width:6%">@person.Age</td>
                        <td style="width:8%">@person.Gender</td>
                        <td style="width:10%">@person.Country</td>
                        <td style="width:15%">@person.Address</td>
                        <td style="width:8%">@person.ReceiveNewsLetters</td>
                        <td style="width:20%">
                            <a asp-controller="Persons" asp-action="Edit" asp-route-personID="@person.PersonID" style="width:auto;" class="button-link button-blue-back">Edit</a>
                            <a asp-controller="Persons" asp-action="Delete" asp-route-personID="@person.PersonID" style="width:auto;" class="button-link button-red-back">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>